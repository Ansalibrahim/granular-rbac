name: Publish to NPM

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'packages/**'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'packages/**'
  workflow_dispatch:

jobs:
  # Job to detect which packages have changed
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      core-changed: ${{ steps.changes.outputs.core }}
      react-changed: ${{ steps.changes.outputs.react }}
      express-changed: ${{ steps.changes.outputs.express }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            core:
              - 'packages/core/**'
            react:
              - 'packages/react/**'
            express:
              - 'packages/express/**'

  # Job to run tests and build packages
  test-and-build:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.core-changed == 'true' || needs.detect-changes.outputs.react-changed == 'true' || needs.detect-changes.outputs.express-changed == 'true' }}
    
    strategy:
      matrix:
        package: [core, react, express]
        include:
          - package: core
            changed: ${{ needs.detect-changes.outputs.core-changed }}
          - package: react
            changed: ${{ needs.detect-changes.outputs.react-changed }}
          - package: express
            changed: ${{ needs.detect-changes.outputs.express-changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: matrix.changed == 'true'
        run: |
          cd packages/${{ matrix.package }}
          npm ci --ignore-scripts || npm install --ignore-scripts

      - name: Run tests
        if: matrix.changed == 'true'
        run: |
          cd packages/${{ matrix.package }}
          npm test --if-present

      - name: Build package
        if: matrix.changed == 'true'
        run: |
          cd packages/${{ matrix.package }}
          npm run build

      - name: Upload build artifacts
        if: matrix.changed == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.package }}-dist
          path: packages/${{ matrix.package }}/dist

  # Job to publish packages to npm (only on main/master push, not PRs)
  publish:
    runs-on: ubuntu-latest
    needs: [detect-changes, test-and-build]
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
    
    strategy:
      matrix:
        package: [core, react, express]
        include:
          - package: core
            changed: ${{ needs.detect-changes.outputs.core-changed }}
          - package: react
            changed: ${{ needs.detect-changes.outputs.react-changed }}
          - package: express
            changed: ${{ needs.detect-changes.outputs.express-changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Download build artifacts
        if: matrix.changed == 'true'
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.package }}-dist
          path: packages/${{ matrix.package }}/dist

      - name: Check if package exists and get version
        if: matrix.changed == 'true'
        id: package-info
        run: |
          cd packages/${{ matrix.package }}
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          echo "package-name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "package-version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          
          # Check if version exists on npm
          if npm view "$PACKAGE_NAME@$PACKAGE_VERSION" version >/dev/null 2>&1; then
            echo "version-exists=true" >> $GITHUB_OUTPUT
            echo "Version $PACKAGE_VERSION of $PACKAGE_NAME already exists on npm"
          else
            echo "version-exists=false" >> $GITHUB_OUTPUT
            echo "Version $PACKAGE_VERSION of $PACKAGE_NAME does not exist on npm"
          fi

      - name: Bump version if needed
        if: matrix.changed == 'true' && steps.package-info.outputs.version-exists == 'true'
        run: |
          cd packages/${{ matrix.package }}
          npm version patch --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "Bumped version to $NEW_VERSION"

      - name: Publish to npm
        if: matrix.changed == 'true'
        run: |
          cd packages/${{ matrix.package }}
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          echo "Publishing $PACKAGE_NAME@$PACKAGE_VERSION to npm..."
          npm publish --access public
          
          echo "✅ Successfully published $PACKAGE_NAME@$PACKAGE_VERSION"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create git tag
        if: matrix.changed == 'true'
        run: |
          cd packages/${{ matrix.package }}
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          TAG_NAME="${PACKAGE_NAME}@${PACKAGE_VERSION}"
          git tag -a "$TAG_NAME" -m "Release $TAG_NAME"
          git push origin "$TAG_NAME"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job to create a release summary
  release-summary:
    runs-on: ubuntu-latest
    needs: [detect-changes, publish]
    if: ${{ always() && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create release summary
        run: |
          echo "# 📦 NPM Package Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Packages Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.detect-changes.outputs.core-changed }}" == "true" ]; then
            echo "- ✅ **granular-rbac-core**: Published" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⏸️ **granular-rbac-core**: No changes" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.detect-changes.outputs.react-changed }}" == "true" ]; then
            echo "- ✅ **granular-rbac-react**: Published" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⏸️ **granular-rbac-react**: No changes" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.detect-changes.outputs.express-changed }}" == "true" ]; then
            echo "- ✅ **granular-rbac-express**: Published" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⏸️ **granular-rbac-express**: No changes" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Installation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo '# Install packages' >> $GITHUB_STEP_SUMMARY
          echo 'npm install granular-rbac-core granular-rbac-react granular-rbac-express' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
